{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\QuizFinal\\\\frontend\\\\src\\\\pages\\\\LeaderboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaderboardPage = () => {\n  _s();\n  const [leaderboard, setLeaderboard] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchLeaderboard = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/leaderboard');\n        // Assuming the response.data is an array of leaderboard entries\n        setLeaderboard(response.data.slice(0, 5)); // Limit to top 5 entries\n      } catch (error) {\n        console.error(\"Error fetching leaderboard data:\", error);\n      }\n    };\n    fetchLeaderboard();\n    const intervalId = setInterval(fetchLeaderboard, 10000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleLogout = () => {\n    // Implement logout functionality here if needed\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"leaderboard-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboard.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(LeaderboardPage, \"NISQAa/KqdYrjt9iG2HUkU5DPiE=\", false, function () {\n  return [useNavigate];\n});\n_c = LeaderboardPage;\nexport default LeaderboardPage;\nvar _c;\n$RefreshReg$(_c, \"LeaderboardPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","LeaderboardPage","_s","leaderboard","setLeaderboard","navigate","fetchLeaderboard","response","get","data","slice","error","console","intervalId","setInterval","clearInterval","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","rank","name","score","_id","onClick","_c","$RefreshReg$"],"sources":["D:/web Dev/QuizFinal/frontend/src/pages/LeaderboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Leaderboard.css';\r\n\r\nconst LeaderboardPage = () => {\r\n    const [leaderboard, setLeaderboard] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchLeaderboard = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/leaderboard');\r\n                // Assuming the response.data is an array of leaderboard entries\r\n                setLeaderboard(response.data.slice(0, 5)); // Limit to top 5 entries\r\n            } catch (error) {\r\n                console.error(\"Error fetching leaderboard data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchLeaderboard();\r\n        const intervalId = setInterval(fetchLeaderboard, 10000);\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        // Implement logout functionality here if needed\r\n        navigate('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"leaderboard-page\">\r\n            <h2>Leaderboard</h2>\r\n            <table className=\"leaderboard-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Rank</th>\r\n                        <th>Name</th>\r\n                        <th>Score</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {leaderboard.map((user, index) => (\r\n                        <tr key={user._id}> {/* Use _id as the key */}\r\n                            <td>{user.rank}</td> {/* Display rank from the database */}\r\n                            <td>{user.name}</td>\r\n                            <td>{user.score}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"logout-button\" onClick={handleLogout}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeaderboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}