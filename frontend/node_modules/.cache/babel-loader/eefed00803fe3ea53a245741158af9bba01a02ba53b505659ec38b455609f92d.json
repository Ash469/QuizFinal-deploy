{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\QuizFinal\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  var _questions$currentQue;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({}); // To track user's answers\n  const [correctAnswers, setCorrectAnswers] = useState([]); // To store correct answers\n  const [timeRemaining, setTimeRemaining] = useState(300);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('https://krish-2512.github.io/api/questions-2.json');\n        const shuffled = response.data.sort(() => 0.5 - Math.random()); // Shuffle questions randomly\n        const selectedQuestions = shuffled.slice(0, 10); // Take only 10 questions\n        setQuestions(selectedQuestions);\n        setCorrectAnswers(selectedQuestions.map(q => q.answer)); // Extract correct answers\n      } catch (err) {\n        console.error(\"Error loading questions:\", err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (timeRemaining <= 0) {\n      handleFinalSubmit(); // Automatically submit if time runs out\n    }\n    const timerId = setInterval(() => {\n      setTimeRemaining(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [timeRemaining]);\n  const handleAnswerChange = answer => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [currentQuestion]: answer\n    }));\n  };\n  const handleNextQuestion = () => {\n    // Go to next question\n    setCurrentQuestion(prev => prev + 1);\n  };\n  const handleFinalSubmit = () => {\n    // Handle the final submission logic\n    console.log(\"Final submission of all answers:\", userAnswers);\n    handleQuizCompletion(); // Calculate score and navigate to result page\n  };\n  const handleQuizCompletion = () => {\n    // Calculate the score based on user answers and correct answers\n    const score = calculateScore(userAnswers, correctAnswers);\n    // Navigate to the result page and pass relevant state\n    navigate('/result', {\n      state: {\n        score,\n        totalQuestions: questions.length,\n        userAnswers,\n        correctAnswers\n      }\n    });\n  };\n  const calculateScore = (userAnswers, correctAnswers) => {\n    let score = 0;\n    // Logic to compare answers\n    for (let questionIndex in correctAnswers) {\n      if (userAnswers[questionIndex] === correctAnswers[questionIndex]) {\n        score += 1; // Increment score for each correct answer\n      }\n    }\n    return score;\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 40\n  }, this);\n  const minutes = Math.floor(timeRemaining / 60);\n  const seconds = timeRemaining % 60;\n  const rotation = timeRemaining / 300 * 360;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", currentQuestion + 1, \" of 10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-title\",\n          children: \"Time Remaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circular-timer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-inner\",\n            children: [minutes < 10 ? `0${minutes}` : minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\",\n            style: {\n              transform: `rotate(${rotation}deg)`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: (_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ['A', 'B', 'C', 'D'].map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${currentQuestion}`,\n                value: option,\n                onChange: () => handleAnswerChange(option),\n                checked: userAnswers[currentQuestion] === option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), questions[currentQuestion][option]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [currentQuestion > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQuestion(prev => prev - 1),\n          children: \"Previous Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), currentQuestion < questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), currentQuestion === questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleFinalSubmit,\n          children: \"Final Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizPage, \"61/eldcSH110e6h7JkAmp5B/zvM=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","QuizPage","_s","_questions$currentQue","questions","setQuestions","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","correctAnswers","setCorrectAnswers","timeRemaining","setTimeRemaining","navigate","fetchQuestions","response","get","shuffled","data","sort","Math","random","selectedQuestions","slice","map","q","answer","err","console","error","handleFinalSubmit","timerId","setInterval","prev","clearInterval","handleAnswerChange","handleNextQuestion","log","handleQuizCompletion","score","calculateScore","state","totalQuestions","length","questionIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","minutes","floor","seconds","rotation","className","style","transform","question","option","type","name","value","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["D:/web Dev/QuizFinal/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './QuizPage.css';\r\n\r\nconst QuizPage = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [userAnswers, setUserAnswers] = useState({}); // To track user's answers\r\n    const [correctAnswers, setCorrectAnswers] = useState([]); // To store correct answers\r\n    const [timeRemaining, setTimeRemaining] = useState(300);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await axios.get('https://krish-2512.github.io/api/questions-2.json');\r\n                const shuffled = response.data.sort(() => 0.5 - Math.random()); // Shuffle questions randomly\r\n                const selectedQuestions = shuffled.slice(0, 10); // Take only 10 questions\r\n                setQuestions(selectedQuestions);\r\n                setCorrectAnswers(selectedQuestions.map(q => q.answer)); // Extract correct answers\r\n            } catch (err) {\r\n                console.error(\"Error loading questions:\", err);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (timeRemaining <= 0) {\r\n            handleFinalSubmit(); // Automatically submit if time runs out\r\n        }\r\n        const timerId = setInterval(() => {\r\n            setTimeRemaining((prev) => prev - 1);\r\n        }, 1000);\r\n        return () => clearInterval(timerId);\r\n    }, [timeRemaining]);\r\n\r\n    const handleAnswerChange = (answer) => {\r\n        setUserAnswers((prev) => ({ ...prev, [currentQuestion]: answer }));\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        // Go to next question\r\n        setCurrentQuestion((prev) => prev + 1);\r\n    };\r\n\r\n    const handleFinalSubmit = () => {\r\n        // Handle the final submission logic\r\n        console.log(\"Final submission of all answers:\", userAnswers);\r\n        handleQuizCompletion(); // Calculate score and navigate to result page\r\n    };\r\n\r\n    const handleQuizCompletion = () => {\r\n        // Calculate the score based on user answers and correct answers\r\n        const score = calculateScore(userAnswers, correctAnswers);\r\n        // Navigate to the result page and pass relevant state\r\n        navigate('/result', { state: { score, totalQuestions: questions.length, userAnswers, correctAnswers } });\r\n    };\r\n\r\n    const calculateScore = (userAnswers, correctAnswers) => {\r\n        let score = 0;\r\n        // Logic to compare answers\r\n        for (let questionIndex in correctAnswers) {\r\n            if (userAnswers[questionIndex] === correctAnswers[questionIndex]) {\r\n                score += 1; // Increment score for each correct answer\r\n            }\r\n        }\r\n        return score;\r\n    };\r\n    \r\n    if (questions.length === 0) return <div>Loading...</div>;\r\n    \r\n    const minutes = Math.floor(timeRemaining / 60);\r\n    const seconds = timeRemaining % 60;\r\n    const rotation = (timeRemaining / 300) * 360;\r\n\r\n    return (\r\n        <div className=\"quiz-page\">\r\n            <div className=\"quiz-container\">\r\n                <h3>Question {currentQuestion + 1} of 10</h3>\r\n                <div className=\"timer-container\">\r\n                    <div className=\"timer-title\">Time Remaining</div>\r\n                    <div className=\"circular-timer\">\r\n                        <div className=\"timer-inner\">\r\n                            {minutes < 10 ? `0${minutes}` : minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n                        </div>\r\n                        <div className=\"loader\" style={{ transform: `rotate(${rotation}deg)` }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"question\">\r\n                    <h4>{questions[currentQuestion]?.question}</h4>\r\n                    <ul>\r\n                        {['A', 'B', 'C', 'D'].map((option) => (\r\n                            <li key={option}>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={`question-${currentQuestion}`}\r\n                                        value={option}\r\n                                        onChange={() => handleAnswerChange(option)}\r\n                                        checked={userAnswers[currentQuestion] === option}\r\n                                    />\r\n                                    {questions[currentQuestion][option]}\r\n                                </label>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"navigation-buttons\">\r\n                    {currentQuestion > 0 && (\r\n                        <button onClick={() => setCurrentQuestion((prev) => prev - 1)}>\r\n                            Previous Question\r\n                        </button>\r\n                    )}\r\n\r\n                    {currentQuestion < questions.length - 1 && (\r\n                        <button onClick={handleNextQuestion}>\r\n                            Next Question\r\n                        </button>\r\n                    )}\r\n\r\n                    {currentQuestion === questions.length - 1 && (\r\n                        <button className=\"submit-button\" onClick={handleFinalSubmit}>\r\n                            Final Submit\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}