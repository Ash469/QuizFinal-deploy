{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\QuizFinal\\\\frontend\\\\src\\\\pages\\\\ResultPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ResultPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPage = ({\n  score,\n  totalQuestions,\n  userAnswers,\n  correctAnswers\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  // Calculate the rank based on score (this is just a sample logic)\n  const rank = score >= totalQuestions * 0.8 ? 'Excellent' : score >= totalQuestions * 0.5 ? 'Good' : 'Needs Improvement';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \"/\", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Rank: \", rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"performance-breakdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Performance Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: answer === correctAnswers[index] ? 'correct' : 'incorrect',\n          children: [\"Q\", index + 1, \": \", answer, \" - \", answer === correctAnswers[index] ? 'Correct' : 'Incorrect']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/dashboard'),\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          /* Implement logout logic here */navigate('/');\n        },\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","ResultPage","score","totalQuestions","userAnswers","correctAnswers","_s","navigate","rank","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","index","onClick","_c","$RefreshReg$"],"sources":["D:/web Dev/QuizFinal/frontend/src/pages/ResultPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ResultPage.css';\r\n\r\nconst ResultPage = ({ score, totalQuestions, userAnswers, correctAnswers }) => {\r\n    const navigate = useNavigate();\r\n\r\n    // Calculate the rank based on score (this is just a sample logic)\r\n    const rank = score >= totalQuestions * 0.8 ? 'Excellent' : score >= totalQuestions * 0.5 ? 'Good' : 'Needs Improvement';\r\n\r\n    return (\r\n        <div className=\"result-container\">\r\n            <h1>Quiz Result</h1>\r\n            <div className=\"score\">\r\n                <h2>Your Score: {score}/{totalQuestions}</h2>\r\n                <h3>Your Rank: {rank}</h3>\r\n            </div>\r\n            <div className=\"performance-breakdown\">\r\n                <h3>Performance Breakdown</h3>\r\n                <ul>\r\n                    {userAnswers.map((answer, index) => (\r\n                        <li key={index} className={answer === correctAnswers[index] ? 'correct' : 'incorrect'}>\r\n                            Q{index + 1}: {answer} - {answer === correctAnswers[index] ? 'Correct' : 'Incorrect'}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"action-buttons\">\r\n                <button onClick={() => navigate('/dashboard')}>Return to Dashboard</button>\r\n                <button onClick={() => { /* Implement logout logic here */ navigate('/'); }}>Log Out</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}