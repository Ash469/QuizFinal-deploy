{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\QuizFinal\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/QuizPage.js\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setAnswer, setScore, resetQuiz } from '../store/quizSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const res = await axios.get('https://krish-2512.github.io/api/questions-2.json');\n      setQuestions(res.data.sort(() => 0.5 - Math.random()).slice(0, 10)); // Random selection of 10 questions\n    };\n    fetchQuestions();\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 0) {\n          clearInterval(timer);\n          handleSubmit(); // Submit when time is up\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleSubmit = () => {\n    // Calculate score\n    const score = questions.reduce((total, question, index) => {\n      if (question.correctAnswer === dispatch.selectedOption) {\n        return total + 3; // +3 for correct answers\n      }\n      return total;\n    }, 0);\n    dispatch(setScore(score));\n    navigate('/result');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Left: \", timeLeft, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), questions.length > 0 && currentQuestionIndex < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"options\",\n          value: option,\n          onChange: () => {\n            setSelectedOption(option);\n            dispatch(setAnswer({\n              question: questions[currentQuestionIndex].question,\n              answer: option\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), option]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleSubmit();\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n        },\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Finish Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizPage, \"n8LdfdoQDMCa+9MYQvWza692XMU=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["useEffect","useState","axios","useDispatch","setAnswer","setScore","resetQuiz","useNavigate","jsxDEV","_jsxDEV","QuizPage","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","timeLeft","setTimeLeft","dispatch","navigate","fetchQuestions","res","get","data","sort","Math","random","slice","timer","setInterval","prev","clearInterval","handleSubmit","score","reduce","total","question","index","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","length","options","map","option","type","name","value","onChange","answer","onClick","_c","$RefreshReg$"],"sources":["D:/web Dev/QuizFinal/frontend/src/pages/QuizPage.js"],"sourcesContent":["// frontend/src/pages/QuizPage.js\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAnswer, setScore, resetQuiz } from '../store/quizSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst QuizPage = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [timeLeft, setTimeLeft] = useState(300); // 5 minutes\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            const res = await axios.get('https://krish-2512.github.io/api/questions-2.json');\r\n            setQuestions(res.data.sort(() => 0.5 - Math.random()).slice(0, 10)); // Random selection of 10 questions\r\n        };\r\n        fetchQuestions();\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prev) => {\r\n                if (prev <= 0) {\r\n                    clearInterval(timer);\r\n                    handleSubmit(); // Submit when time is up\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n        // Calculate score\r\n        const score = questions.reduce((total, question, index) => {\r\n            if (question.correctAnswer === dispatch.selectedOption) {\r\n                return total + 3; // +3 for correct answers\r\n            }\r\n            return total;\r\n        }, 0);\r\n\r\n        dispatch(setScore(score));\r\n        navigate('/result');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Quiz</h2>\r\n            <p>Time Left: {timeLeft} seconds</p>\r\n            {questions.length > 0 && currentQuestionIndex < questions.length ? (\r\n                <div>\r\n                    <h3>{questions[currentQuestionIndex].question}</h3>\r\n                    {questions[currentQuestionIndex].options.map((option, index) => (\r\n                        <div key={index}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"options\"\r\n                                value={option}\r\n                                onChange={() => {\r\n                                    setSelectedOption(option);\r\n                                    dispatch(setAnswer({ question: questions[currentQuestionIndex].question, answer: option }));\r\n                                }}\r\n                            />\r\n                            {option}\r\n                        </div>\r\n                    ))}\r\n                    <button onClick={() => {\r\n                        handleSubmit();\r\n                        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n                    }}>\r\n                        Submit Answer\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <button onClick={handleSubmit}>Finish Quiz</button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}