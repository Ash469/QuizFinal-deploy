{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\QuizFinal\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './LoginPage.css';\n\n// const LoginPage = () => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [showRegister, setShowRegister] = useState(false); // To toggle between login and register forms\n//     const navigate = useNavigate();\n\n//     // Function to handle login submission\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const res = await axios.post('http://localhost:3001/', { email, password });\n//             localStorage.setItem('token', res.data.token);\n//             navigate('/start-quiz');\n//         } catch (error) {\n//             console.error('Login failed:', error);\n//         }\n//     };\n\n//     const  handleRegisterSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const res = await axios.post('http://localhost:3001/', { email, password });\n//             localStorage.setItem('token', res.data.token); // Save token to localStorage\n//             navigate('/start-quiz');\n//         } catch (error) {\n//             console.error('Login failed:', error);\n//         }\n//     };\n\n//     // const handleRegisterSubmit = async (e) => {\n//     //     e.preventDefault();\n//     //     // Implement register logic here using form inputs\n//     //     console.log('Register form submitted');\n//     // };\n\n//     return (\n//         <div className=\"container\">\n//             <div className=\"form-container\">\n//                 {/* Conditionally render based on `showRegister` state */}\n//                 {!showRegister ? (\n//                     // Login Form\n//                     <form id=\"login-form\" className=\"form\" onSubmit={handleSubmit}>\n//                         <h2>Login</h2>\n//                         <input\n//                             type=\"email\"\n//                             placeholder=\"Email\"\n//                             value={email}\n//                             onChange={(e) => setEmail(e.target.value)}\n//                             required\n//                         />\n//                         <input\n//                             type=\"password\"\n//                             placeholder=\"Password\"\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                             required\n//                         />\n//                         <button type=\"submit\">Login</button>\n//                         <p>\n//                             Don't have an account?{' '}\n//                             <a href=\"#\" onClick={() => setShowRegister(true)}>Register</a>\n//                         </p>\n//                     </form>\n//                 ) : (\n//                     // Register Form\n//                     <form id=\"register-form\" className=\"form\" onSubmit={handleRegisterSubmit}>\n//                         <h2>Register</h2>\n//                         <input type=\"text\" name=\"name\" placeholder=\"Name\" required />\n//                         <input type=\"text\" name=\"mobile\" placeholder=\"Mobile Number\" required />\n//                         <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n//                         <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n//                         <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required />\n//                         <button type=\"submit\">Register</button>\n//                         <p>\n//                             Already have an account?{' '}\n//                             <a href=\"#\" onClick={() => setShowRegister(false)}>Login</a>\n//                         </p>\n//                     </form>\n\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default LoginPage;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport './LoginPage.css'; // Custom CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    // Replace with your API URL\n    const apiUrl = 'https://your-backend-api.com/login';\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Store JWT token in localStorage or cookies\n        localStorage.setItem('jwtToken', data.token);\n        // Redirect to Start Quiz Page\n        navigate('/start-quiz');\n      } else {\n        alert('Invalid email or password');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New user? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/sign-up\",\n        children: \"Sign up here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","handleLogin","event","preventDefault","apiUrl","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","href","_c","$RefreshReg$"],"sources":["D:/web Dev/QuizFinal/frontend/src/pages/LoginPage.js"],"sourcesContent":["// import { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './LoginPage.css';\r\n\r\n// const LoginPage = () => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [showRegister, setShowRegister] = useState(false); // To toggle between login and register forms\r\n//     const navigate = useNavigate();\r\n\r\n//     // Function to handle login submission\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const res = await axios.post('http://localhost:3001/', { email, password });\r\n//             localStorage.setItem('token', res.data.token);\r\n//             navigate('/start-quiz');\r\n//         } catch (error) {\r\n//             console.error('Login failed:', error);\r\n//         }\r\n//     };\r\n\r\n//     const  handleRegisterSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const res = await axios.post('http://localhost:3001/', { email, password });\r\n//             localStorage.setItem('token', res.data.token); // Save token to localStorage\r\n//             navigate('/start-quiz');\r\n//         } catch (error) {\r\n//             console.error('Login failed:', error);\r\n//         }\r\n//     };\r\n    \r\n\r\n//     // const handleRegisterSubmit = async (e) => {\r\n//     //     e.preventDefault();\r\n//     //     // Implement register logic here using form inputs\r\n//     //     console.log('Register form submitted');\r\n//     // };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <div className=\"form-container\">\r\n//                 {/* Conditionally render based on `showRegister` state */}\r\n//                 {!showRegister ? (\r\n//                     // Login Form\r\n//                     <form id=\"login-form\" className=\"form\" onSubmit={handleSubmit}>\r\n//                         <h2>Login</h2>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             placeholder=\"Email\"\r\n//                             value={email}\r\n//                             onChange={(e) => setEmail(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             placeholder=\"Password\"\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             required\r\n//                         />\r\n//                         <button type=\"submit\">Login</button>\r\n//                         <p>\r\n//                             Don't have an account?{' '}\r\n//                             <a href=\"#\" onClick={() => setShowRegister(true)}>Register</a>\r\n//                         </p>\r\n//                     </form>\r\n//                 ) : (\r\n//                     // Register Form\r\n//                     <form id=\"register-form\" className=\"form\" onSubmit={handleRegisterSubmit}>\r\n//                         <h2>Register</h2>\r\n//                         <input type=\"text\" name=\"name\" placeholder=\"Name\" required />\r\n//                         <input type=\"text\" name=\"mobile\" placeholder=\"Mobile Number\" required />\r\n//                         <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n//                         <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n//                         <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required />\r\n//                         <button type=\"submit\">Register</button>\r\n//                         <p>\r\n//                             Already have an account?{' '}\r\n//                             <a href=\"#\" onClick={() => setShowRegister(false)}>Login</a>\r\n//                         </p>\r\n//                     </form>\r\n\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default LoginPage;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // For navigation\r\nimport './LoginPage.css'; // Custom CSS file for styling\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    // Replace with your API URL\r\n    const apiUrl = 'https://your-backend-api.com/login'; \r\n    \r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        // Store JWT token in localStorage or cookies\r\n        localStorage.setItem('jwtToken', data.token);\r\n        // Redirect to Start Quiz Page\r\n        navigate('/start-quiz');\r\n      } else {\r\n        alert('Invalid email or password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <h2>Login to Your Account</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        New user? <a href=\"/sign-up\">Sign up here</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}