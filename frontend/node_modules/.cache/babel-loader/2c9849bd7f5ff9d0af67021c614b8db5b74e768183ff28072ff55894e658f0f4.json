{"ast":null,"code":"var _jsxFileName = \"D:\\\\web Dev\\\\QuizFinal\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showRegister, setShowRegister] = useState(false); // To toggle between login and register forms\n  const navigate = useNavigate();\n\n  // Function to handle login submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/users/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      navigate('/start-quiz');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const handleRegisterSubmit = async e => {\n    e.preventDefault();\n    // Implement register logic here using form inputs\n    console.log('Register form submitted');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: !showRegister ?\n      /*#__PURE__*/\n      // Login Form\n      _jsxDEV(\"form\", {\n        id: \"login-form\",\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setShowRegister(true),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // Register Form\n      _jsxDEV(\"form\", {\n        id: \"register-form\",\n        className: \"form\",\n        onSubmit: handleRegisterSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Mobile Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setShowRegister(false),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"Gr1NcSrN8J9+LFgGKJyYKczDf7Q=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","showRegister","setShowRegister","navigate","handleSubmit","e","preventDefault","res","post","localStorage","setItem","data","token","error","console","handleRegisterSubmit","log","className","children","id","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","href","onClick","_c","$RefreshReg$"],"sources":["D:/web Dev/QuizFinal/frontend/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showRegister, setShowRegister] = useState(false); // To toggle between login and register forms\r\n    const navigate = useNavigate();\r\n\r\n    // Function to handle login submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/users/login', { email, password });\r\n            localStorage.setItem('token', res.data.token);\r\n            navigate('/start-quiz');\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleRegisterSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Implement register logic here using form inputs\r\n        console.log('Register form submitted');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form-container\">\r\n                {/* Conditionally render based on `showRegister` state */}\r\n                {!showRegister ? (\r\n                    // Login Form\r\n                    <form id=\"login-form\" className=\"form\" onSubmit={handleSubmit}>\r\n                        <h2>Login</h2>\r\n                        <input \r\n                            type=\"email\" \r\n                            placeholder=\"Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} \r\n                            required \r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            required \r\n                        />\r\n                        <button type=\"submit\">Login</button>\r\n                        <p>\r\n                            Don't have an account?{' '}\r\n                            <a href=\"#\" onClick={() => setShowRegister(true)}>Register</a>\r\n                        </p>\r\n                    </form>\r\n                ) : (\r\n                    // Register Form\r\n                    <form id=\"register-form\" className=\"form\" onSubmit={handleRegisterSubmit}>\r\n                        <h2>Register</h2>\r\n                        <input type=\"text\" placeholder=\"Name\" required />\r\n                        <input type=\"text\" placeholder=\"Mobile Number\" required />\r\n                        <input type=\"email\" placeholder=\"Email\" required />\r\n                        <input type=\"password\" placeholder=\"Password\" required />\r\n                        <input type=\"password\" placeholder=\"Confirm Password\" required />\r\n                        <button type=\"submit\">Register</button>\r\n                        <p>\r\n                            Already have an account?{' '}\r\n                            <a href=\"#\" onClick={() => setShowRegister(false)}>Login</a>\r\n                        </p>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}